#!/usr/bin/env node

const path = require('path');
const util = require('util');
const fs = require('fs-extra');
const exec = util.promisify(require('child_process').exec);



const build(libName) {
  const libDir = path.join(process.cwd(), 'projects', libName);
  const distDir = path.join(process.cwd(), 'dist', libName);
  const docsDir = path.join(process.cwd(), 'build', libName, 'docs');
  const coverageDir = path.join(process.cwd(), 'build', libName, 'coverage');
  const tarballDir = path.join(process.cwd(), 'build', libName, 'tarballs');
  let version;
  console.log(`Building ${libName}...`);
  return fs.ensureDirectory(docsDir)
    .then(() => {
      return fs.ensureDirectory(coverageDir);
    })
    .then(() => {
      return fs.ensureDirectory(tarballDir);
    })
    .then(() => {
      return exec('npm version patch', {cwd: libDir});
    })
    .then(results => {
      version = results.stdout.trim();
      console.log(`Building lib...`);
      return exec(`ng build ${libName}`);
    })
    .then(() => {
      console.log(`Tests with coverage...`);
      return exec(`ng test ${libName}  --code-coverage --watch=false`)
    })
    .then(() => {
      console.log(`Building docs...`);
      return exec(`compodoc  -p tsconfig.lib.json  --disableCoverage --output ${docsDir} -n "@nowzoo/${libName} - ${version} - Documentation"`, {cwd: libDir})
    })
    .then(() => {
      console.log(`Building tarball...`);
      return exec(`npm pack ${distDir}`, {cwd: tarballDir})
    })
}

return build('ngx-bootstrap-navbar')
  .then(() => {
    return build('ngx-crumbs'))
  })
  .then(() => {
    return build('ngx-form'))
  })
  .then(() => {
    return build('ngx-message'))
  })
  .then(() => {
    return build('ngx-sign-in-redirect'))
  });
